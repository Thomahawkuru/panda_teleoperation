/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */



using RosSharp.RosBridgeClient.MessageTypes.Std;
using RosSharp.RosBridgeClient.MessageTypes.Geometry;

namespace RosSharp.RosBridgeClient.MessageTypes.FrankaCore
{
    public class EndPointState : Message
    {
        public const string RosMessageName = "franka_core_msgs/EndPointState";

        public Header header { get; set; }
        public double[] O_T_EE { get; set; }
        //  Measured end effector pose in base frame
        //  ----- Moved ee velocity to robot state, because it is being computed using J*dq. EE vel is not being provided natively
        // float64[6] O_dP_EE_c # Last commanded end effector twist in base frame.
        // float64[6] O_dP_EE_d # Desired end effector twist in base frame.
        // float64[6] O_ddP_EE_c # Last commanded end effector acceleration in base frame.
        public WrenchStamped O_F_ext_hat_K { get; set; }
        //  Estimated external wrench (force, torque) acting on stiffness frame, expressed relative to the base frame
        public WrenchStamped K_F_ext_hat_K { get; set; }
        //  Estimated external wrench (force, torque) acting on stiffness frame, expressed relative to the stiffness frame (ee_frame by default)

        public EndPointState()
        {
            this.header = new Header();
            this.O_T_EE = new double[16];
            this.O_F_ext_hat_K = new WrenchStamped();
            this.K_F_ext_hat_K = new WrenchStamped();
        }

        public EndPointState(Header header, double[] O_T_EE, WrenchStamped O_F_ext_hat_K, WrenchStamped K_F_ext_hat_K)
        {
            this.header = header;
            this.O_T_EE = O_T_EE;
            this.O_F_ext_hat_K = O_F_ext_hat_K;
            this.K_F_ext_hat_K = K_F_ext_hat_K;
        }
    }
}
